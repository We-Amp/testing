[
  {
    "TestName": "FCGI Server and Client Fail First",
    "Description": "First request with cache headers should fail but next one should pass"
  },
  {
    "create": "externallauncher.launcher",
    "name": "ts"
  },
  {
    "action": "ts.launch",
    "cmd": "bin/trafficserver",
    "env_path": "ATS_EXEC",
    "root_access": true,
    "arguments": [
      "start"
    ],
    "name": "ts1"
  },
  {
    "action": "ts1.scan_for",
    "name": "tsr",
    "keyword": "done"
  },
  {
    "create": "http1.client",
    "name": "fcgi"
  },
  {
    "create": "fcgi.server",
    "name": "fs"
  },
  {
    "action": "fs.start"
  },
  {
    "action": "waitfor",
    "event": "fs.ServerStarted",
    "name": "fs1",
    "data": ""
  },
  {
    "action": "parallel",
    "list": [
      [
        {
          "action": "fcgi.get",
          "url": "http://localhost:9080/ajaxExample.php",
          "headers": {
            "Connection": "keep-alive"
          },
          "name": "resp1"
        },
        {
          "action": "fcgi.get",
          "url": "http://localhost:9080/ajaxExample.php",
          "headers": {
            "Connection": "keep-alive"
          },
          "name": "resp2"
        },
        {
          "action": "expect",
          "value": "resp2.response_headers.:status",
          "expected": 200,
          "Description": "Request 2 Status should be 200 OK"
        },
        {
          "action": "expect",
          "value": "resp2.data",
          "expected": "HelloWorld",
          "Description": "Data should be HelloWorld and it should not be cached"
        }
      ],
      [
        {
          "action": "waitfor",
          "event": "fs.FCGI_STDIN",
          "name": "fsrequest1",
          "data": ""
        },
        {
          "action": "fsrequest1.send_record",
          "request_id": 1,
          "type": "FCGI_STDOUT",
          "data": "Content-type: text/html\r\nCache-Control: max-age=60\r\n\r\n",
          "padding_length": 0,
          "version": 1,
          "name": "rec1"
        },
        {
          "action": "fsrequest1.send_record",
          "request_id": 1,
          "type": "FCGI_STDOUT",
          "data": "First chunk\r\n",
          "padding_length": 0,
          "version": 1,
          "name": "rec1"
        },
        {
          "action": "fsrequest1.send_record",
          "request_id": 1,
          "type": "FCGI_STDOUT",
          "data": "Second chunk\r\n",
          "padding_length": 0,
          "version": 1,
          "name": "rec1"
        },
        {
          "action": "fs.kill",
          "name": "fsk"
        },
        {
          "create": "fcgi.server",
          "name": "fs2"
        },
        {
          "action": "fs2.start"
        },
        {
          "action": "waitfor",
          "event": "fs2.ServerStarted",
          "name": "fs2S",
          "data": ""
        },
        {
          "action": "waitfor",
          "event": "fs2.FCGI_STDIN",
          "name": "fsrequest2",
          "data": ""
        },
        {
          "action": "fsrequest2.send_record",
          "request_id": 1,
          "type": "FCGI_STDOUT",
          "data": "Content-type: text/html\r\nContent-Length: 10\r\n\r\nHelloWorld\r\n\r\n",
          "padding_length": 0,
          "version": 1,
          "name": "newrec1"
        },
        {
          "action": "fsrequest2.send_record",
          "request_id": 1,
          "type": "FCGI_END_REQUEST",
          "name": "newrec2"
        },
        {
          "action": "fs2.kill",
          "name": "fsk2"
        }
      ]
    ]
  },
  {
    "action": "ts.launch",
    "cmd": "bin/trafficserver",
    "env_path": "ATS_EXEC",
    "root_access": true,
    "arguments": [
      "stop"
    ],
    "name": "ts2"
  },
  {
    "action": "ts2.scan_for",
    "name": "tsr",
    "keyword": "done"
  }
]
